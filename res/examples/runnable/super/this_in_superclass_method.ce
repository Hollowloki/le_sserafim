type Base {
  a: String
}

impl Base {
  fn new(a: String) {
    self.a = a;
  }
}

type Derived {
  a: String,
  b: String
}

impl Derived < Base {
  fn new(a: String, b: String) {
    super.new(a);
    self.b = b;
  }
}

let derived = Derived("a", "b");
println derived.a; // out: a
println derived.b; // out: b
