type A;

impl A {
  fn say() {
    println "A";
  }
}

type B;

impl B < A {
  fn getClosure() -> fn {
    fn closure() {
      super.say();
    }
    return closure;
  }

  fn say() {
    println "B";
  }
}

type C;

impl C < B {
  fn say() {
    println "C";
  }
}

C().getClosure()(); // out: A
